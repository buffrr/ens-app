"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var OracleProof =
/**
 * @constructor
 * @param {Object} proof
 * @param {number} proof.inception - time the signature was generated
 * @param {number} proof.inserted - time the record was inserted into DNSSEC oracle
 * @param {string} proof.hash - hash of proof stored in DNSSEC oracle
 * @param {string} proof.hashToProve - hash of proof constructed from DNS record
 * @param {boolean} proof.validInception - true if inception in DNSSEC oracle is older than the one from DNS record.
 * @param {boolean} proof.matched - true if inception is valid and hash is matched
 */
function OracleProof(_ref) {
  var inception = _ref.inception,
      inserted = _ref.inserted,
      hash = _ref.hash,
      hashToProve = _ref.hashToProve,
      validInception = _ref.validInception,
      matched = _ref.matched;

  _classCallCheck(this, OracleProof);

  this.inception = inception;
  this.inserted = inserted;
  this.hash = hash;
  this.hashToProve = hashToProve;
  this.validInception = validInception;
  this.matched = matched;
};

module.exports = OracleProof;